apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask-app
          image: <AWS_ACCOUNT_ID>.dkr.ecr.ap-southeast-2.amazonaws.com/flask-app:latest
          ports:
            - containerPort: 5000
          env:
            - name: PORT
              value: "5000"
      imagePullSecrets:
        - name: ecr-auth
---
apiVersion: v1
kind: Service
metadata:
  name: flask-app
  namespace: app
spec:
  selector:
    app: flask-app
  ports:
    - port: 80
      targetPort: 5000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flask-ingress
  namespace: app
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: flask-app
                port:
                  number: 80
          - path: /api/hello
            pathType: Prefix
            backend:
              service:
                name: flask-app
                port:
                  number: 80
          - path: /health
            pathType: Prefix
            backend:
              service:
                name: flask-app
                port:
                  number: 80 